---
on:
  push:
    tags:
      - "*"

env:
  name: "emtv"

jobs:
  "publish":
    strategy:
      matrix:
        os:
          - "ubuntu-latest"
          - "macos-latest"
          - "windows-latest"

    runs-on: "${{ matrix.os }}"

    permissions:
      contents: "write"

    steps:
      - uses: "actions/checkout@v3"

      - uses: "egor-tensin/vs-shell@v2"

      - uses: "jurplel/install-qt-action@v3"

      - run: "qmake"



      - run: |
          make
        if: "${{ matrix.os == 'ubuntu-latest'}}"

      - uses: "softprops/action-gh-release@v1"
        if: "${{ matrix.os == 'ubuntu-latest'}}"
        with:
          files: "${{ env.name }}"



      - run: |
          nmake
          windeployqt release/${{ env.name }}.exe
          Copy-Item "AppxManifest.xml" -Destination "release"
          Copy-Item "small.png" -Destination "release"
          Get-ChildItem -Recurse
          MakeAppx pack /v /h SHA384 /d release /p ${{ env.name }}.msix
          ls
        if: "${{ matrix.os == 'windows-latest'}}"

      - uses: "thedoctor0/zip-release@main"
        if: "${{ matrix.os == 'windows-latest'}}"
        with:
          path: "release"
          filename: "${{ env.name }}.zip"

      - uses: "softprops/action-gh-release@v1"
        if: "${{ matrix.os == 'windows-latest'}}"
        with:
          files: "${{ env.name }}.msix"



      - run: |
          make
          macdeployqt $name.app
          pkgbuild --install-location /Applications --identifier nu.mine.mosher.$name --component $name.app/ $name.pkg
        if: "${{ matrix.os == 'macos-latest'}}"

      - uses: "softprops/action-gh-release@v1"
        if: "${{ matrix.os == 'macos-latest'}}"
        with:
          files: "${{ env.name }}.pkg"
